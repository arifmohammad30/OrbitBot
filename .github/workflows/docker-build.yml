name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Debug directory structure
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Checking for Backend directory:"
        if [ -d "Backend" ]; then
          echo "Backend directory found"
          ls -la Backend/
        else
          echo "Backend directory not found in current location"
        fi
        if [ -d "OrbitBot/Backend" ]; then
          echo "OrbitBot/Backend directory found"
          ls -la OrbitBot/Backend/
        else
          echo "OrbitBot/Backend directory not found"
        fi
      
    - name: Build Docker image
      run: |
        # Try different possible paths
        if [ -d "Backend" ]; then
          echo "Building from Backend directory"
          cd Backend
        elif [ -d "OrbitBot/Backend" ]; then
          echo "Building from OrbitBot/Backend directory"
          cd OrbitBot/Backend
        else
          echo "Error: Backend directory not found"
          exit 1
        fi
        
        # Check if Dockerfile exists
        if [ ! -f "Dockerfile" ]; then
          echo "Error: Dockerfile not found in $(pwd)"
          ls -la
          exit 1
        fi
        
        echo "Building Docker image from $(pwd)"
        docker build -t orbitbot-backend .
        
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Push to GitHub Container Registry
      run: |
        # Tag and push latest
        docker tag orbitbot-backend ghcr.io/${{ github.repository }}/orbitbot-backend:latest
        docker push ghcr.io/${{ github.repository }}/orbitbot-backend:latest
        
        # Tag and push with commit SHA
        docker tag orbitbot-backend ghcr.io/${{ github.repository }}/orbitbot-backend:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}/orbitbot-backend:${{ github.sha }}
        
        # Tag and push with branch name (for PRs)
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          docker tag orbitbot-backend ghcr.io/${{ github.repository }}/orbitbot-backend:pr-${{ github.event.number }}
          docker push ghcr.io/${{ github.repository }}/orbitbot-backend:pr-${{ github.event.number }}
        fi 